// Time Complexity= O(n*n!)
// Space Complexity=  O(n)

class Solution {
public:
    void permutation(vector<int>&nums, int pos, vector<vector<int>>&ans){
        int n = nums.size();
        if(pos>=n){
            ans.push_back(nums);
            return;
        }
        for(int i =pos; i<n; i++){
            swap(nums[i],nums[pos]);
            permutation(nums, pos+1,ans);
            swap(nums[i],nums[pos]); // Backtracing steps.
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>ans;
        permutation(nums,0,ans);
        return ans;
        
    }
};
