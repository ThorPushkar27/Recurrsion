class Solution {
public:
    vector<vector<int>>helper(vector<int>&nums,int i){
        if(i>=nums.size()) return {{}};
        vector<vector<int>>partial_ans = helper(nums,i+1);
        vector<vector<int>>ans;
        for(vector<int>x:partial_ans){
            ans.push_back(x);
        }
        for(vector<int>x:partial_ans){
            x.push_back(nums[i]);
            ans.push_back(x);
        }
        return ans;
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        return helper(nums,0);
        
    }
};



//Ye jayada simple h


class Solution {
public:
    void helper(vector<int>&nums, int i, vector<int>&sub, vector<vector<int>>&ans){
        if(i==nums.size()){
            ans.push_back(sub);
            return;
        }
        sub.push_back(nums[i]);
        helper(nums,i+1,sub,ans);

        sub.pop_back();
        helper(nums,i+1,sub,ans);
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>>ans;
        vector<int>sub;
        
        helper(nums,0,sub,ans);
        return ans;
        
    }
};
